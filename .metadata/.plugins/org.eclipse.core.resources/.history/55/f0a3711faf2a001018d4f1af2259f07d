package com.dating.bot.openAI;


import lombok.Data;
import lombok.extern.slf4j.Slf4j;
import org.springframework.http.*;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

import com.dating.bot.entity.AiProfile;

import java.util.List;
import java.util.Map;


@Slf4j
@Component
public class LLMClient {
	
	private final String OLLAMA_URL = "http://localhost:11434/api/chat";

    public String generateReply(AiProfile profile, String userMessage) {
        RestTemplate restTemplate = new RestTemplate();

        MessagePayload payload = new MessagePayload();
//        payload.setModel("llama3");
//        payload.setModel("mistral");
//        payload.setModel("gemma:2b");
//        payload.setModel("llama2:7b");
//        payload.setModel("phi");
          payload.setModel("tinydolphin");
       
        

        // Customize with profile personality
        payload.setMessages(List.of(
            new Message("system", "You are " + profile.getFirstName() + 
                        ", a fun, flirty dating profile. Be engaging, short, and confident."),
            new Message("user", userMessage)
        ));

        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);

        HttpEntity<MessagePayload> request = new HttpEntity<>(payload, headers);

        try {
            ResponseEntity<Map> response = restTemplate.exchange(
                OLLAMA_URL,
                HttpMethod.POST,
                request,
                Map.class
            );

            Map<String, Object> body = response.getBody();
            return body != null ? (String) body.get("message") : "Sorry, Iâ€™m a bit shy right now!";
        } catch (Exception e) {
            log.error("Error calling Ollama: ", e);
            return "Oops! Something went wrong with my brain.";
        }
    }

    @Data
    static class MessagePayload {
        private String model;
        private List<Message> messages;
    }

    @Data
    static class Message {
        private String role;
        private String content;

        public Message(String role, String content) {
            this.role = role;
            this.content = content;
        }
    }
}
